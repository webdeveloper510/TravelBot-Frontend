{"ast":null,"code":"var _jsxFileName = \"/home/codenomad/Downloads/material-dashboard-react-main/src/routesPrivate.js\";\nimport React from \"react\";\nimport { Navigate, Route } from \"react-router-dom\";\nimport PropTypes from \"prop-types\"; // Import PropTypes\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst PrivateRoute = ({\n  component: Component,\n  token,\n  ...rest\n}) => {\n  return /*#__PURE__*/_jsxDEV(Route, {\n    ...rest,\n    render: props => token ? /*#__PURE__*/_jsxDEV(Component, {\n      ...props\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 10,\n      columnNumber: 17\n    }, this) : /*#__PURE__*/_jsxDEV(Navigate, {\n      to: \"/authentication/sign-in\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 10,\n      columnNumber: 44\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 7,\n    columnNumber: 5\n  }, this);\n};\n\n// Define PropTypes for component and token\n_c = PrivateRoute;\nPrivateRoute.propTypes = {\n  component: PropTypes.elementType.isRequired,\n  // Ensure component is a valid React component\n  token: PropTypes.string // Define token as a string (or adjust as needed)\n};\n\nexport default PrivateRoute;\nvar _c;\n$RefreshReg$(_c, \"PrivateRoute\");","map":{"version":3,"names":["React","Navigate","Route","PropTypes","jsxDEV","_jsxDEV","PrivateRoute","component","Component","token","rest","render","props","fileName","_jsxFileName","lineNumber","columnNumber","to","_c","propTypes","elementType","isRequired","string","$RefreshReg$"],"sources":["/home/codenomad/Downloads/material-dashboard-react-main/src/routesPrivate.js"],"sourcesContent":["import React from \"react\";\nimport { Navigate, Route } from \"react-router-dom\";\nimport PropTypes from \"prop-types\"; // Import PropTypes\n\nconst PrivateRoute = ({ component: Component, token, ...rest }) => {\n  return (\n    <Route\n      {...rest}\n      render={(props) =>\n        token ? <Component {...props} /> : <Navigate to=\"/authentication/sign-in\" />\n      }\n    />\n  );\n};\n\n// Define PropTypes for component and token\nPrivateRoute.propTypes = {\n  component: PropTypes.elementType.isRequired, // Ensure component is a valid React component\n  token: PropTypes.string, // Define token as a string (or adjust as needed)\n};\n\nexport default PrivateRoute;\n"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,QAAQ,EAAEC,KAAK,QAAQ,kBAAkB;AAClD,OAAOC,SAAS,MAAM,YAAY,CAAC,CAAC;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAEpC,MAAMC,YAAY,GAAGA,CAAC;EAAEC,SAAS,EAAEC,SAAS;EAAEC,KAAK;EAAE,GAAGC;AAAK,CAAC,KAAK;EACjE,oBACEL,OAAA,CAACH,KAAK;IAAA,GACAQ,IAAI;IACRC,MAAM,EAAGC,KAAK,IACZH,KAAK,gBAAGJ,OAAA,CAACG,SAAS;MAAA,GAAKI;IAAK;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAG,CAAC,gBAAGX,OAAA,CAACJ,QAAQ;MAACgB,EAAE,EAAC;IAAyB;MAAAJ,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE;EAC5E;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACF,CAAC;AAEN,CAAC;;AAED;AAAAE,EAAA,GAXMZ,YAAY;AAYlBA,YAAY,CAACa,SAAS,GAAG;EACvBZ,SAAS,EAAEJ,SAAS,CAACiB,WAAW,CAACC,UAAU;EAAE;EAC7CZ,KAAK,EAAEN,SAAS,CAACmB,MAAM,CAAE;AAC3B,CAAC;;AAED,eAAehB,YAAY;AAAC,IAAAY,EAAA;AAAAK,YAAA,CAAAL,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}