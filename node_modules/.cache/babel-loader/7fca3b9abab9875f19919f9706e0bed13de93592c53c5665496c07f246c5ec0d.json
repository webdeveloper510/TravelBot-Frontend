{"ast":null,"code":"import _objectSpread from \"/home/codenomad/Downloads/material-dashboard-react-main/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";\nimport _classCallCheck from \"/home/codenomad/Downloads/material-dashboard-react-main/node_modules/@babel/runtime/helpers/esm/classCallCheck.js\";\nimport _createClass from \"/home/codenomad/Downloads/material-dashboard-react-main/node_modules/@babel/runtime/helpers/esm/createClass.js\";\nimport _inherits from \"/home/codenomad/Downloads/material-dashboard-react-main/node_modules/@babel/runtime/helpers/esm/inherits.js\";\nimport _createSuper from \"/home/codenomad/Downloads/material-dashboard-react-main/node_modules/@babel/runtime/helpers/esm/createSuper.js\";\nimport React, { PureComponent } from 'react';\nvar GitHubButton = /*#__PURE__*/function (_PureComponent) {\n  _inherits(GitHubButton, _PureComponent);\n  var _super = _createSuper(GitHubButton);\n  function GitHubButton(props) {\n    var _this;\n    _classCallCheck(this, GitHubButton);\n    _this = _super.call(this, props);\n    _this.$ = React.createRef();\n    _this._ = React.createRef();\n    return _this;\n  }\n  _createClass(GitHubButton, [{\n    key: \"render\",\n    value: function render() {\n      return React.createElement('span', {\n        ref: this.$\n      }, React.createElement('a', _objectSpread(_objectSpread({}, this.props), {}, {\n        ref: this._\n      }), this.props.children));\n    }\n  }, {\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this.paint();\n    }\n  }, {\n    key: \"getSnapshotBeforeUpdate\",\n    value: function getSnapshotBeforeUpdate() {\n      this.reset();\n      return null;\n    }\n  }, {\n    key: \"componentDidUpdate\",\n    value: function componentDidUpdate() {\n      this.paint();\n    }\n  }, {\n    key: \"componentWillUnmount\",\n    value: function componentWillUnmount() {\n      this.reset();\n    }\n  }, {\n    key: \"paint\",\n    value: function paint() {\n      var _this2 = this;\n      var _ = this.$.current.appendChild(document.createElement('span'));\n      import( /* webpackMode: \"eager\" */'github-buttons').then(function (_ref) {\n        var render = _ref.render;\n        if (_this2._.current != null) {\n          render(_.appendChild(_this2._.current), function (el) {\n            try {\n              _.parentNode.replaceChild(el, _);\n            } catch (_) {}\n          });\n        }\n      });\n    }\n  }, {\n    key: \"reset\",\n    value: function reset() {\n      this.$.current.replaceChild(this._.current, this.$.current.lastChild);\n    }\n  }]);\n  return GitHubButton;\n}(PureComponent);\nexport default GitHubButton;","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}