{"ast":null,"code":"var _jsxFileName = \"/home/codenomad/Downloads/material-dashboard-react-main/src/routes.js\";\n// /**\n// =========================================================\n// * Material Dashboard 2 React - v2.2.0\n// =========================================================\n\n// * Product Page: https://www.creative-tim.com/product/material-dashboard-react\n// * Copyright 2023 Creative Tim (https://www.creative-tim.com)\n\n// Coded by www.creative-tim.com\n\n//  =========================================================\n\n// * The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.\n// */\n\n// /** \n//   All of the routes for the Material Dashboard 2 React are added here,\n//   You can add a new route, customize the routes and delete the routes here.\n\n//   Once you add a new route on this file it will be visible automatically on\n//   the Sidenav.\n\n//   For adding a new route you can follow the existing routes in the routes array.\n//   1. The `type` key with the `collapse` value is used for a route.\n//   2. The `type` key with the `title` value is used for a title inside the Sidenav. \n//   3. The `type` key with the `divider` value is used for a divider between Sidenav items.\n//   4. The `name` key is used for the name of the route on the Sidenav.\n//   5. The `key` key is used for the key of the route (It will help you with the key prop inside a loop).\n//   6. The `icon` key is used for the icon of the route on the Sidenav, you have to add a node.\n//   7. The `collapse` key is used for making a collapsible item on the Sidenav that has other routes\n//   inside (nested routes), you need to pass the nested routes inside an array as a value for the `collapse` key.\n//   8. The `route` key is used to store the route location which is used for the react router.\n//   9. The `href` key is used to store the external links location.\n//   10. The `title` key is only for the item with the type of `title` and its used for the title text on the Sidenav.\n//   10. The `component` key is used to store the component of its route.\n// */\n\n// // Material Dashboard 2 React layouts\n// import Dashboard from \"layouts/dashboard\";\n// import Tables from \"layouts/tables\";\n// import Billing from \"layouts/billing\";\n// import RTL from \"layouts/rtl\";\n// import Notifications from \"layouts/notifications\";\n// import Profile from \"layouts/profile\";\n// import SignIn from \"layouts/authentication/sign-in\";\n// import SignUp from \"layouts/authentication/sign-up\";\n\n// // @mui icons\n// import Icon from \"@mui/material/Icon\";\n\n// const token = localStorage.getItem(\"Admin-Token\");\n// const routes = [\n//   token\n//     ? {\n//         type: \"collapse\",\n//         name: \"Dashboard\",\n//         key: \"dashboard\",\n//         icon: <Icon fontSize=\"small\">dashboard</Icon>,\n//         route: \"/dashboard\",\n//         component: <Dashboard />,\n//       }\n//     : {\n//         name: \"Sign In\",\n//         icon: <Icon fontSize=\"small\">login</Icon>,\n//         route: \"/authentication/sign-in\",\n//         component: <SignIn />,\n//       },\n//   // {\n//   //   type: \"collapse\",\n//   //   name: \"Billing\",\n//   //   key: \"billing\",\n//   //   icon: <Icon fontSize=\"small\">receipt_long</Icon>,\n//   //   route: \"/billing\",\n//   //   component: <Billing />,\n//   // },\n//   // {\n//   //   type: \"collapse\",\n//   //   name: \"RTL\",\n//   //   key: \"rtl\",\n//   //   icon: <Icon fontSize=\"small\">format_textdirection_r_to_l</Icon>,\n//   //   route: \"/rtl\",\n//   //   component: <RTL />,\n//   // },\n//   {\n//     type: \"collapse\",\n//     name: \"Notifications\",\n//     key: \"notifications\",\n//     icon: <Icon fontSize=\"small\">notifications</Icon>,\n//     route: \"/notifications\",\n//     component: <Notifications />,\n//   },\n//   {\n//     type: \"collapse\",\n//     name: \"Profile\",\n//     key: \"profile\",\n//     icon: <Icon fontSize=\"small\">person</Icon>,\n//     route: \"/profile\",\n//     component: <Profile />,\n//   },\n//   {\n//     type: \"collapse\",\n//     name: \"Add User\",\n//     key: \"sign-up\",\n//     icon: <Icon fontSize=\"small\">assignment</Icon>,\n//     route: \"/sign-up\",\n//     component: <SignUp />,\n//   },\n// ];\n\n// export default routes;\nimport Dashboard from \"layouts/dashboard\";\nimport Tables from \"layouts/tables\";\nimport Billing from \"layouts/billing\";\nimport RTL from \"layouts/rtl\";\nimport Notifications from \"layouts/notifications\";\nimport Profile from \"layouts/profile\";\nimport SignIn from \"layouts/authentication/sign-in\";\nimport SignUp from \"layouts/authentication/sign-up\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst token = localStorage.getItem(\"Admin-Token\");\n\n// Define a function to check if the user is authenticated\nconst isAuthenticated = () => {\n  return !!token; // Return true if the token exists\n};\n\n// Higher-order component (HOC) for protected routes\nconst withAuth = Component => {\n  return isAuthenticated() ? Component : SignIn;\n};\nconst routes = [{\n  type: \"collapse\",\n  name: \"Dashboard\",\n  key: \"dashboard\",\n  icon: /*#__PURE__*/_jsxDEV(Icon, {\n    fontSize: \"small\",\n    children: \"dashboard\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 137,\n    columnNumber: 11\n  }, this),\n  route: \"/dashboard\",\n  component: withAuth(Dashboard) // Use withAuth for protected routes\n}, {\n  name: \"Sign In\",\n  icon: /*#__PURE__*/_jsxDEV(Icon, {\n    fontSize: \"small\",\n    children: \"login\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 143,\n    columnNumber: 11\n  }, this),\n  route: \"/authentication/sign-in\",\n  component: SignIn\n}, {\n  type: \"collapse\",\n  name: \"Notifications\",\n  key: \"notifications\",\n  icon: /*#__PURE__*/_jsxDEV(Icon, {\n    fontSize: \"small\",\n    children: \"notifications\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 151,\n    columnNumber: 11\n  }, this),\n  route: \"/notifications\",\n  component: withAuth(Notifications) // Use withAuth for protected routes\n}, {\n  type: \"collapse\",\n  name: \"Profile\",\n  key: \"profile\",\n  icon: /*#__PURE__*/_jsxDEV(Icon, {\n    fontSize: \"small\",\n    children: \"person\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 159,\n    columnNumber: 11\n  }, this),\n  route: \"/profile\",\n  component: withAuth(Profile) // Use withAuth for protected routes\n}, {\n  type: \"collapse\",\n  name: \"Add User\",\n  key: \"sign-up\",\n  icon: /*#__PURE__*/_jsxDEV(Icon, {\n    fontSize: \"small\",\n    children: \"assignment\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 167,\n    columnNumber: 11\n  }, this),\n  route: \"/sign-up\",\n  component: withAuth(SignUp) // Use withAuth for protected routes\n}];\n\nexport default routes;","map":{"version":3,"names":["Dashboard","Tables","Billing","RTL","Notifications","Profile","SignIn","SignUp","jsxDEV","_jsxDEV","token","localStorage","getItem","isAuthenticated","withAuth","Component","routes","type","name","key","icon","Icon","fontSize","children","fileName","_jsxFileName","lineNumber","columnNumber","route","component"],"sources":["/home/codenomad/Downloads/material-dashboard-react-main/src/routes.js"],"sourcesContent":["// /**\n// =========================================================\n// * Material Dashboard 2 React - v2.2.0\n// =========================================================\n\n// * Product Page: https://www.creative-tim.com/product/material-dashboard-react\n// * Copyright 2023 Creative Tim (https://www.creative-tim.com)\n\n// Coded by www.creative-tim.com\n\n//  =========================================================\n\n// * The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.\n// */\n\n// /** \n//   All of the routes for the Material Dashboard 2 React are added here,\n//   You can add a new route, customize the routes and delete the routes here.\n\n//   Once you add a new route on this file it will be visible automatically on\n//   the Sidenav.\n\n//   For adding a new route you can follow the existing routes in the routes array.\n//   1. The `type` key with the `collapse` value is used for a route.\n//   2. The `type` key with the `title` value is used for a title inside the Sidenav. \n//   3. The `type` key with the `divider` value is used for a divider between Sidenav items.\n//   4. The `name` key is used for the name of the route on the Sidenav.\n//   5. The `key` key is used for the key of the route (It will help you with the key prop inside a loop).\n//   6. The `icon` key is used for the icon of the route on the Sidenav, you have to add a node.\n//   7. The `collapse` key is used for making a collapsible item on the Sidenav that has other routes\n//   inside (nested routes), you need to pass the nested routes inside an array as a value for the `collapse` key.\n//   8. The `route` key is used to store the route location which is used for the react router.\n//   9. The `href` key is used to store the external links location.\n//   10. The `title` key is only for the item with the type of `title` and its used for the title text on the Sidenav.\n//   10. The `component` key is used to store the component of its route.\n// */\n\n// // Material Dashboard 2 React layouts\n// import Dashboard from \"layouts/dashboard\";\n// import Tables from \"layouts/tables\";\n// import Billing from \"layouts/billing\";\n// import RTL from \"layouts/rtl\";\n// import Notifications from \"layouts/notifications\";\n// import Profile from \"layouts/profile\";\n// import SignIn from \"layouts/authentication/sign-in\";\n// import SignUp from \"layouts/authentication/sign-up\";\n\n// // @mui icons\n// import Icon from \"@mui/material/Icon\";\n\n// const token = localStorage.getItem(\"Admin-Token\");\n// const routes = [\n//   token\n//     ? {\n//         type: \"collapse\",\n//         name: \"Dashboard\",\n//         key: \"dashboard\",\n//         icon: <Icon fontSize=\"small\">dashboard</Icon>,\n//         route: \"/dashboard\",\n//         component: <Dashboard />,\n//       }\n//     : {\n//         name: \"Sign In\",\n//         icon: <Icon fontSize=\"small\">login</Icon>,\n//         route: \"/authentication/sign-in\",\n//         component: <SignIn />,\n//       },\n//   // {\n//   //   type: \"collapse\",\n//   //   name: \"Billing\",\n//   //   key: \"billing\",\n//   //   icon: <Icon fontSize=\"small\">receipt_long</Icon>,\n//   //   route: \"/billing\",\n//   //   component: <Billing />,\n//   // },\n//   // {\n//   //   type: \"collapse\",\n//   //   name: \"RTL\",\n//   //   key: \"rtl\",\n//   //   icon: <Icon fontSize=\"small\">format_textdirection_r_to_l</Icon>,\n//   //   route: \"/rtl\",\n//   //   component: <RTL />,\n//   // },\n//   {\n//     type: \"collapse\",\n//     name: \"Notifications\",\n//     key: \"notifications\",\n//     icon: <Icon fontSize=\"small\">notifications</Icon>,\n//     route: \"/notifications\",\n//     component: <Notifications />,\n//   },\n//   {\n//     type: \"collapse\",\n//     name: \"Profile\",\n//     key: \"profile\",\n//     icon: <Icon fontSize=\"small\">person</Icon>,\n//     route: \"/profile\",\n//     component: <Profile />,\n//   },\n//   {\n//     type: \"collapse\",\n//     name: \"Add User\",\n//     key: \"sign-up\",\n//     icon: <Icon fontSize=\"small\">assignment</Icon>,\n//     route: \"/sign-up\",\n//     component: <SignUp />,\n//   },\n// ];\n\n// export default routes;\nimport Dashboard from \"layouts/dashboard\";\nimport Tables from \"layouts/tables\";\nimport Billing from \"layouts/billing\";\nimport RTL from \"layouts/rtl\";\nimport Notifications from \"layouts/notifications\";\nimport Profile from \"layouts/profile\";\nimport SignIn from \"layouts/authentication/sign-in\";\nimport SignUp from \"layouts/authentication/sign-up\";\n\nconst token = localStorage.getItem(\"Admin-Token\");\n\n// Define a function to check if the user is authenticated\nconst isAuthenticated = () => {\n  return !!token; // Return true if the token exists\n};\n\n// Higher-order component (HOC) for protected routes\nconst withAuth = (Component) => {\n  return isAuthenticated() ? Component : SignIn;\n};\n\nconst routes = [\n  {\n    type: \"collapse\",\n    name: \"Dashboard\",\n    key: \"dashboard\",\n    icon: <Icon fontSize=\"small\">dashboard</Icon>,\n    route: \"/dashboard\",\n    component: withAuth(Dashboard), // Use withAuth for protected routes\n  },\n  {\n    name: \"Sign In\",\n    icon: <Icon fontSize=\"small\">login</Icon>,\n    route: \"/authentication/sign-in\",\n    component: SignIn,\n  },\n  {\n    type: \"collapse\",\n    name: \"Notifications\",\n    key: \"notifications\",\n    icon: <Icon fontSize=\"small\">notifications</Icon>,\n    route: \"/notifications\",\n    component: withAuth(Notifications), // Use withAuth for protected routes\n  },\n  {\n    type: \"collapse\",\n    name: \"Profile\",\n    key: \"profile\",\n    icon: <Icon fontSize=\"small\">person</Icon>,\n    route: \"/profile\",\n    component: withAuth(Profile), // Use withAuth for protected routes\n  },\n  {\n    type: \"collapse\",\n    name: \"Add User\",\n    key: \"sign-up\",\n    icon: <Icon fontSize=\"small\">assignment</Icon>,\n    route: \"/sign-up\",\n    component: withAuth(SignUp), // Use withAuth for protected routes\n  },\n];\n\nexport default routes;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}